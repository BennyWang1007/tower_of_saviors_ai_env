

# ppo_tos_6by5_3color_9act_1000move_fixed_3obs_0.02Penal_noLimit
model_scores = {8064000: (22.87, -405.27), 8192000: (22.52, -4.38), 8320000: (23.7, -11.98), 8448000: (23.33, -12.78), 8576000: (22.54, 0.0), 8704000: (22.6, -340.29), 8832000: (22.36, -1150.39), 8960000: (22.13, -11.98), 9088000: (23.35, -19.98), 9216000: (22.41, -3.98), 9344000: (23.71, -5004.98), 9472000: (22.12, -3.98), 9600000: (23.65, -7.98), 9728000: (21.05, 0.0), 9856000: (22.02, -1997.1), 9984000: (23.74, -3.98), 10112000: (23.21, 0.0), 10240000: (23.12, -753.28), 10368000: (23.39, -11.98), 10496000: (23.08, -7.03), 10624000: (23.85, -7.98), 10752000: (23.16, -2991.06), 10880000: (20.5, -15.98), 11008000: (23.26, -1.18), 11136000: (22.07, 0.0), 11264000: (21.55, -19.98), 11392000: (21.73, -0.78), 11520000: (21.71, -3.58), 11648000: (21.12, -2001.01), 11776000: (21.17, 0.0), 11904000: (21.72, -5012.98), 12032000: (22.88, -3998.5), 12160000: (22.74, -19.98), 12288000: (20.76, -14.67), 12416000: (22.63, -7.98), 12544000: (22.14, 0.0), 12672000: (21.65, -1879.98), 12800000: (20.4, -9.36)}

# dqn_tos_6by5_3color_9act_1000move_fixed_3obs_0.02Penal_noLimit_defaltkwarg
# model_scores = {128000: (0.0, -1738.15), 256000: (0.0, -1671.53), 384000: (0.0, -2196.39), 512000: (0.0, -1478.94), 640000: (0.0, -2173.17), 768000: (0.0, -1862.75), 896000: (0.0, -1882.82), 1024000: (0.0, -1155.52), 1152000: (0.0, -1289.75), 1280000: (0.0, -731.33), 1408000: (0.0, -443.24), 1536000: (8.9, -108.78), 1664000: (22.32, -175.15), 1792000: (13.39, -153.88), 1920000: (16.72, -440.21), 2048000: (16.18, -14.97), 2176000: (13.88, -6.14), 2304000: (12.9, -113.89), 2432000: (10.81, -162.38), 2560000: (12.25, -347.87), 2688000: (15.0, -178.34), 2816000: (4.65, -344.27), 2944000: (12.11, -178.68), 3072000: (8.09, -349.77), 3200000: (3.22, -51.86), 3328000: (1.35, -58.61), 3456000: (0.0, -250.88), 3584000: (2.02, -237.19), 3712000: (0.82, -186.41), 3840000: (0.02, -330.5), 3968000: (1.92, -10.7), 4096000: (9.52, -67.14), 4224000: (17.25, -327.94), 4352000: (16.84, -45.66), 4480000: (14.5, -248.92), 4608000: (18.08, -23.98), 4736000: (15.32, -179.98), 4864000: (20.04, -130.36), 4992000: (16.75, -63.81), 5120000: (19.15, -419.46), 5248000: (16.33, -98.32), 5376000: (14.82, -138.36), 5504000: (18.05, -9.73), 5632000: (13.74, -229.46), 5760000: (13.45, -193.62), 5888000: (17.68, -7.63), 6016000: (15.56, -195.06), 6144000: (16.52, -10.68), 6272000: (17.25, -241.28), 6400000: (16.26, -43.1), 6528000: (16.89, -191.93), 6656000: (17.1, -457.32), 6784000: (17.97, -330.77), 6912000: (15.91, -374.08), 7040000: (18.42, -10.19), 7168000: (18.41, -8.18), 7296000: (18.09, -5.98), 7424000: (17.83, -8.5), 7552000: (16.27, -6.48), 7680000: (17.56, -10.31), 7808000: (18.52, -7.47), 7936000: (14.88, -5.77), 8064000: (16.35, -6.15), 8192000: (17.87, -299.49), 8320000: (18.69, -8.69), 8448000: (19.45, -4.95), 8576000: (19.68, -111.79), 8704000: (19.72, -5.74), 8832000: (17.82, -4.9), 8960000: (19.97, -5.93), 9088000: (12.58, -7.31), 9216000: (17.73, -7.93), 9344000: (18.6, -6.75), 9472000: (17.81, -6.51), 9600000: (17.09, -4.51), 9728000: (18.29, -36.52), 9856000: (15.08, -302.8), 9984000: (17.24, -5.09), 10112000: (18.11, -42.26), 10240000: (19.05, -5.18), 10368000: (20.63, -49.16), 10496000: (15.0, -5.96), 10624000: (15.82, -68.36), 10752000: (14.93, -438.04), 10880000: (14.92, -83.4), 11008000: (17.57, -94.4), 11136000: (8.99, -5.79), 11264000: (15.98, -5.16), 11392000: (18.85, -4.95), 11520000: (17.89, -8.4), 11648000: (12.89, -333.0), 11776000: (17.08, -5.73), 11904000: (8.05, -6.89), 12032000: (15.36, -4.36), 12160000: (13.42, -4.82), 12288000: (12.89, -3.98), 12416000: (15.79, -78.1)}

# dqn_tos_6by5_3color_9act_1000move_fixed_3obs_0.02Penal_noLimit
# model_scores = {128000: ((0.0, 0), (-1708.95, 30)), 256000: ((0.0, 0), (-2593.7, 30)), 384000: ((0.0, 0), (-1941.16, 30)), 512000: ((0.0, 0), (-1500.18, 30)), 640000: ((0.0, 0), (-1410.99, 30)), 768000: ((0.0, 0), (-2384.33, 30)), 896000: ((0.0, 0), (-1226.97, 30)), 1024000: ((0.02, 1), (-1186.8, 29)), 1152000: ((0.0, 0), (-1047.1, 30)), 1280000: ((0.0, 0), (-762.97, 30)), 1408000: ((0.0, 0), (-857.64, 30)), 1536000: ((0.0, 0), (-141.07, 30)), 1664000: ((0.02, 2), (-406.9, 28)), 1792000: ((0.0, 0), (-773.98, 30)), 1920000: ((1.62, 2), (-406.58, 28)), 2048000: ((0.0, 0), (-985.41, 30)), 2176000: ((1.22, 2), (-511.42, 28)), 2304000: ((0.0, 0), (-932.65, 30)), 2432000: ((0.0, 0), (-491.47, 30)), 2560000: ((2.42, 1), (-450.22, 29)), 2688000: ((0.0, 0), (-351.19, 30)), 2816000: ((0.0, 0), (-441.1, 30)), 2944000: ((4.82, 1), (-543.2, 29)), 3072000: ((0.13, 2), (-356.63, 28)), 3200000: ((0.0, 0), (-460.88, 30)), 3328000: ((0.82, 1), (-372.34, 29)), 3456000: ((0.82, 3), (-801.15, 27)), 3584000: ((0.0, 0), (-325.48, 30)), 3712000: ((3.22, 1), (-450.99, 29)), 3840000: ((0.02, 3), (-311.87, 27)), 3968000: ((1.53, 2), (-320.4, 28)), 4096000: ((0.0, 0), (-430.28, 30)), 4224000: ((0.42, 2), (-177.27, 28)), 4352000: ((0.0, 0), (-412.48, 30)), 4480000: ((2.42, 1), (-246.18, 29)), 4608000: ((0.95, 3), (-241.11, 27)), 4736000: ((2.42, 1), (-561.43, 29)), 4864000: ((3.62, 1), (-607.76, 29)), 4992000: ((0.02, 2), (-683.19, 28)), 5120000: ((3.84, 1), (-354.17, 29)), 5248000: ((1.7, 5), (-531.08, 25)), 5376000: ((2.82, 2), (-218.59, 28)), 5504000: ((1.46, 5), (-357.46, 25)), 5632000: ((0.69, 6), (-255.97, 24)), 5760000: ((2.42, 1), (-458.15, 29)), 5888000: ((0.02, 1), (-316.79, 29)), 6016000: ((1.82, 2), (-438.7, 28)), 6144000: ((0.02, 1), (-793.24, 29)), 6272000: ((1.42, 2), (-240.48, 28)), 6400000: ((0.0, 0), (-62.02, 30)), 6528000: ((0.42, 2), (-589.0, 28)), 6656000: ((1.62, 3), (-308.67, 27)), 6784000: ((2.42, 1), (-870.69, 29)), 6912000: ((1.39, 7), (-387.37, 23)), 7040000: ((0.89, 6), (-729.22, 24)), 7168000: ((2.02, 1), (-589.02, 29)), 7296000: ((0.0, 0), (-411.41, 30)), 7424000: ((1.82, 2), (-483.41, 28)), 7552000: ((2.55, 3), (-513.36, 27)), 7680000: ((0.0, 0), (-614.95, 30)), 7808000: ((0.29, 3), (-535.59, 27)), 7936000: ((0.0, 0), (-297.51, 30)), 8064000: ((0.0, 0), (-416.92, 30)), 8192000: ((0.02, 1), (-340.75, 29)), 8320000: ((0.02, 1), (-404.35, 29)), 8448000: ((2.42, 1), (-574.38, 29)), 8576000: ((1.62, 3), (-555.5, 27))}

# dqn_tos_6by5_3color_9act_1000move_fixed_3obs
# model_scores = {10000: ((4.33, 10), (-299.59, 20)), 20000: ((5.16, 21), (-1.28, 9)), 30000: ((4.72, 10), (-752.19, 20)), 40000: ((5.53, 23), (-0.03, 7)), 50000: ((4.79, 18), (-0.28, 12)), 60000: ((5.02, 18), (-0.29, 12)), 70000: ((6.03, 15), (-0.64, 15)), 80000: ((5.59, 20), (-0.64, 10)), 90000: ((5.99, 19), (-1.12, 11)), 100000: ((4.91, 15), (-0.04, 15)), 110000: ((4.24, 14), (-501.34, 16)), 120000: ((4.3, 11), (-0.03, 19)), 130000: ((4.28, 13), (-295.32, 17)), 140000: ((4.23, 15), (-0.03, 15)), 150000: ((4.26, 14), (-0.03, 16)), 160000: ((4.27, 13), (-0.32, 17)), 170000: ((4.27, 13), (-0.32, 17)), 180000: ((4.5, 15), (-334.69, 15)), 190000: ((4.22, 16), (-0.03, 14)), 200000: ((3.97, 10), (-0.03, 20)), 210000: ((4.28, 13), (-0.03, 17)), 220000: ((4.6, 12), (-0.31, 18)), 230000: ((3.99, 17), (-0.03, 13)), 240000: ((3.99, 15), (-0.03, 15)), 250000: ((4.27, 12), (-0.36, 18)), 260000: ((4.63, 12), (-279.08, 18)), 270000: ((4.28, 13), (-0.2, 17)), 280000: ((4.33, 11), (-264.5, 19)), 290000: ((4.25, 14), (-0.4, 16)), 300000: ((3.97, 3), (-0.25, 27)), 310000: ((3.97, 4), (-0.03, 26)), 320000: ((3.96, 5), (-0.26, 25)), 330000: ((3.96, 5), (-0.02, 25)), 340000: ((3.96, 6), (-0.03, 24)), 350000: ((3.97, 7), (-0.03, 23)), 360000: ((3.97, 5), (-0.03, 25)), 370000: ((3.96, 5), (-0.14, 25)), 380000: ((3.97, 6), (-209.19, 24)), 390000: ((3.96, 5), (-0.03, 25)), 400000: ((3.96, 5), (-0.03, 25)), 410000: ((3.97, 6), (-209.19, 24)), 420000: ((3.97, 7), (-0.03, 23)), 430000: ((3.96, 5), (-0.03, 25)), 440000: ((3.96, 6), (-0.03, 24)), 450000: ((3.96, 6), (-0.03, 24)), 460000: ((3.97, 4), (-193.1, 26)), 470000: ((3.97, 2), (-179.31, 28)), 480000: ((3.96, 1), (-4138.23, 29)), 490000: ((3.96, 4), (-193.1, 26)), 500000: ((3.96, 5), (-0.02, 25)), 510000: ((3.97, 6), (-209.19, 24)), 520000: ((3.98, 8), (-228.71, 22)), 530000: ((4.49, 6), (-0.03, 24)), 540000: ((3.97, 6), (-0.02, 24)), 550000: ((3.96, 5), (-0.03, 25)), 560000: ((3.96, 5), (-0.02, 25)), 570000: ((3.96, 5), (-0.02, 25))}

import matplotlib.pyplot as plt
import numpy as np

x = list(model_scores.keys())
y = [v[0] for v in model_scores.values()]

plt.plot(x, y, label='mean score')
plt.xlabel('model steps')
plt.ylabel('mean score')
plt.title('Model score')
plt.legend()
plt.show()



# sort by mean score
sorted_model_scores = dict(sorted(model_scores.items(), key=lambda item: item[1][0], reverse=True))


print('sorted by mean score')
for k, v in sorted_model_scores.items():
    print(k, v)


print('highest mean score with no mistake')
for k, v in sorted_model_scores.items():
    if v[1] == 0:
        print(k, v)

